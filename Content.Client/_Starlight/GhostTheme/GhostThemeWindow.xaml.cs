using Content.Client.LateJoin;
using System.Linq;
using System.Numerics;
using Content.Client.Lobby;
using Content.Client.Lobby.UI;
using Content.Client.Players.PlayTimeTracking;
using Content.Client.UserInterface.Controls;
using Content.Shared.Starlight.NewLife;
using Content.Shared.CCVar;
using Content.Shared.Ghost.Roles;
using Content.Shared.Preferences;
using Content.Shared.Roles;
using Linguini.Syntax.Ast;
using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Configuration;
using Robust.Shared.Prototypes;
using Robust.Shared.Utility;
using static Robust.Client.UserInterface.Controls.BoxContainer;
using Content.Client.GameTicking.Managers;
using Content.Client.CrewManifest;

namespace Content.Client._Starlight.GhostTheme;

[GenerateTypedNameReferences]
public sealed partial class GhostThemeWindow : DefaultWindow
{
    private readonly IClientPreferencesManager _preferencesManager = default!;
    [Dependency] private readonly IPrototypeManager _prototypeManager = default!;
    [Dependency] private readonly IEntityManager _entManager = default!;

    [Dependency] private readonly IClientConsoleHost _consoleHost = default!;
    [Dependency] private readonly IConfigurationManager _configManager = default!;
    [Dependency] private readonly IEntitySystemManager _entitySystem = default!;

    private readonly ClientGameTicker _gameTicker;
    private readonly SpriteSystem _sprites;


    public GhostThemeWindow(IClientPreferencesManager preferencesManager)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _preferencesManager = preferencesManager;
        _sprites = _entitySystem.GetEntitySystem<SpriteSystem>();
        _gameTicker = _entitySystem.GetEntitySystem<ClientGameTicker>();
        //if ( _gameTicker.StationNames.Count == 0)
        //    _gameTicker.GhostThemeOpened();
    }
}

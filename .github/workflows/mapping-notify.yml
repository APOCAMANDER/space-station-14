name: Notify Discord on Map PR

on:
  pull_request:
    types: [opened, labeled]

jobs:
  notify_discord:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR labels
        id: check-label
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              core.setFailed("No pull_request data found!");
              return;
            }
            const labels = pr.labels.map(label => label.name);
            if (labels.includes("Changes: Map")) {
              core.setOutput("send_notification", "true");
            } else {
              core.setOutput("send_notification", "false");
            }

      - name: Send Discord Notification
        if: steps.check-label.outputs.send_notification == 'true'
        uses: actions/github-script@v7
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_MAPPING_WEBHOOK_URL }}
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              core.setFailed("No pull_request data found!");
              return;
            }

            const desc = pr.body || "No description provided";
            const payload = {
              embeds: [
                {
                  title: "New PR with map changes!",
                  description: pr.title,
                  url: pr.html_url,
                  color: 16776960,
                  fields: [
                    {
                      name: "Description",
                      value: desc,
                      inline: false
                    },
                    {
                      name: "Author",
                      value: pr.user.login,
                      inline: true
                    },
                    {
                      name: "Repository",
                      value: process.env.GITHUB_REPOSITORY,
                      inline: true
                    },
                    {
                      name: "PR Number",
                      value: `#${pr.number}`,
                      inline: true
                    }
                  ],
                  footer: {
                    text: "GitHub Actions",
                    icon_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
                  },
                  timestamp: new Date().toISOString()
                }
              ]
            };

            // Built-in HTTPS module (no extra dependencies needed).
            const https = require("https");

            const url = process.env.DISCORD_WEBHOOK;
            if (!url) {
              core.setFailed("DISCORD_WEBHOOK environment variable is not set.");
              return;
            }

            // Parse the webhook URL so we can post via https.request.
            const urlObj = new URL(url);
            const data = JSON.stringify(payload);

            const options = {
              hostname: urlObj.hostname,
              path: urlObj.pathname + (urlObj.search || ""),
              protocol: urlObj.protocol,
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                "Content-Length": data.length
              }
            };

            const req = https.request(options, res => {
              let body = "";
              res.on("data", chunk => (body += chunk));
              res.on("end", () => {
                if (res.statusCode < 200 || res.statusCode >= 300) {
                  core.setFailed(`Discord webhook returned ${res.statusCode}: ${body}`);
                } else {
                  core.info("Successfully sent notification to Discord.");
                }
              });
            });

            req.on("error", e => {
              core.setFailed(`Failed to send message: ${e.message}`);
            });

            req.write(data);
            req.end();
